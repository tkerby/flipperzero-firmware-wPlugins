// Code generated by go-swagger; DO NOT EDIT.

package nard

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// DecodeApduResponseHandlerFunc turns a function with the right signature into a decode apdu response handler
type DecodeApduResponseHandlerFunc func(DecodeApduResponseParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DecodeApduResponseHandlerFunc) Handle(params DecodeApduResponseParams) middleware.Responder {
	return fn(params)
}

// DecodeApduResponseHandler interface for that can handle valid decode apdu response params
type DecodeApduResponseHandler interface {
	Handle(DecodeApduResponseParams) middleware.Responder
}

// NewDecodeApduResponse creates a new http.Handler for the decode apdu response operation
func NewDecodeApduResponse(ctx *middleware.Context, handler DecodeApduResponseHandler) *DecodeApduResponse {
	return &DecodeApduResponse{Context: ctx, Handler: handler}
}

/*
	DecodeApduResponse swagger:route POST /nard/decode nard decodeApduResponse

# Decode APDU response

Decodes APDU response data using a format template
*/
type DecodeApduResponse struct {
	Context *middleware.Context
	Handler DecodeApduResponseHandler
}

func (o *DecodeApduResponse) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		*r = *rCtx
	}
	var Params = NewDecodeApduResponseParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
